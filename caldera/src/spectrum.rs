use crate::maths::*;
use std::{
    default::Default,
    ops::{Add, Mul},
};

// reference: http://cvrl.ioo.ucl.ac.uk/ (CIE 1931 2 degree XYZ CMFs)
const CIE_WAVELENGTH_BASE: f32 = 360.0;
const CIE_WAVELENGTH_STEP_SIZE: f32 = 1.0;
macro_rules! cie_samples {
    ($(($x:literal, $y:literal, $z:literal)),+) => { [ $( Vec3::new($x, $y, $z), )+ ] }
}
#[allow(clippy::excessive_precision)]
const CIE_SAMPLES: &[Vec3] = &cie_samples!(
    (0.000129900000, 0.000003917000, 0.000606100000),
    (0.000145847000, 0.000004393581, 0.000680879200),
    (0.000163802100, 0.000004929604, 0.000765145600),
    (0.000184003700, 0.000005532136, 0.000860012400),
    (0.000206690200, 0.000006208245, 0.000966592800),
    (0.000232100000, 0.000006965000, 0.001086000000),
    (0.000260728000, 0.000007813219, 0.001220586000),
    (0.000293075000, 0.000008767336, 0.001372729000),
    (0.000329388000, 0.000009839844, 0.001543579000),
    (0.000369914000, 0.000011043230, 0.001734286000),
    (0.000414900000, 0.000012390000, 0.001946000000),
    (0.000464158700, 0.000013886410, 0.002177777000),
    (0.000518986000, 0.000015557280, 0.002435809000),
    (0.000581854000, 0.000017442960, 0.002731953000),
    (0.000655234700, 0.000019583750, 0.003078064000),
    (0.000741600000, 0.000022020000, 0.003486000000),
    (0.000845029600, 0.000024839650, 0.003975227000),
    (0.000964526800, 0.000028041260, 0.004540880000),
    (0.001094949000, 0.000031531040, 0.005158320000),
    (0.001231154000, 0.000035215210, 0.005802907000),
    (0.001368000000, 0.000039000000, 0.006450001000),
    (0.001502050000, 0.000042826400, 0.007083216000),
    (0.001642328000, 0.000046914600, 0.007745488000),
    (0.001802382000, 0.000051589600, 0.008501152000),
    (0.001995757000, 0.000057176400, 0.009414544000),
    (0.002236000000, 0.000064000000, 0.010549990000),
    (0.002535385000, 0.000072344210, 0.011965800000),
    (0.002892603000, 0.000082212240, 0.013655870000),
    (0.003300829000, 0.000093508160, 0.015588050000),
    (0.003753236000, 0.000106136100, 0.017730150000),
    (0.004243000000, 0.000120000000, 0.020050010000),
    (0.004762389000, 0.000134984000, 0.022511360000),
    (0.005330048000, 0.000151492000, 0.025202880000),
    (0.005978712000, 0.000170208000, 0.028279720000),
    (0.006741117000, 0.000191816000, 0.031897040000),
    (0.007650000000, 0.000217000000, 0.036210000000),
    (0.008751373000, 0.000246906700, 0.041437710000),
    (0.010028880000, 0.000281240000, 0.047503720000),
    (0.011421700000, 0.000318520000, 0.054119880000),
    (0.012869010000, 0.000357266700, 0.060998030000),
    (0.014310000000, 0.000396000000, 0.067850010000),
    (0.015704430000, 0.000433714700, 0.074486320000),
    (0.017147440000, 0.000473024000, 0.081361560000),
    (0.018781220000, 0.000517876000, 0.089153640000),
    (0.020748010000, 0.000572218700, 0.098540480000),
    (0.023190000000, 0.000640000000, 0.110200000000),
    (0.026207360000, 0.000724560000, 0.124613300000),
    (0.029782480000, 0.000825500000, 0.141701700000),
    (0.033880920000, 0.000941160000, 0.161303500000),
    (0.038468240000, 0.001069880000, 0.183256800000),
    (0.043510000000, 0.001210000000, 0.207400000000),
    (0.048995600000, 0.001362091000, 0.233692100000),
    (0.055022600000, 0.001530752000, 0.262611400000),
    (0.061718800000, 0.001720368000, 0.294774600000),
    (0.069212000000, 0.001935323000, 0.330798500000),
    (0.077630000000, 0.002180000000, 0.371300000000),
    (0.086958110000, 0.002454800000, 0.416209100000),
    (0.097176720000, 0.002764000000, 0.465464200000),
    (0.108406300000, 0.003117800000, 0.519694800000),
    (0.120767200000, 0.003526400000, 0.579530300000),
    (0.134380000000, 0.004000000000, 0.645600000000),
    (0.149358200000, 0.004546240000, 0.718483800000),
    (0.165395700000, 0.005159320000, 0.796713300000),
    (0.181983100000, 0.005829280000, 0.877845900000),
    (0.198611000000, 0.006546160000, 0.959439000000),
    (0.214770000000, 0.007300000000, 1.039050100000),
    (0.230186800000, 0.008086507000, 1.115367300000),
    (0.244879700000, 0.008908720000, 1.188497100000),
    (0.258777300000, 0.009767680000, 1.258123300000),
    (0.271807900000, 0.010664430000, 1.323929600000),
    (0.283900000000, 0.011600000000, 1.385600000000),
    (0.294943800000, 0.012573170000, 1.442635200000),
    (0.304896500000, 0.013582720000, 1.494803500000),
    (0.313787300000, 0.014629680000, 1.542190300000),
    (0.321645400000, 0.015715090000, 1.584880700000),
    (0.328500000000, 0.016840000000, 1.622960000000),
    (0.334351300000, 0.018007360000, 1.656404800000),
    (0.339210100000, 0.019214480000, 1.685295900000),
    (0.343121300000, 0.020453920000, 1.709874500000),
    (0.346129600000, 0.021718240000, 1.730382100000),
    (0.348280000000, 0.023000000000, 1.747060000000),
    (0.349599900000, 0.024294610000, 1.760044600000),
    (0.350147400000, 0.025610240000, 1.769623300000),
    (0.350013000000, 0.026958570000, 1.776263700000),
    (0.349287000000, 0.028351250000, 1.780433400000),
    (0.348060000000, 0.029800000000, 1.782600000000),
    (0.346373300000, 0.031310830000, 1.782968200000),
    (0.344262400000, 0.032883680000, 1.781699800000),
    (0.341808800000, 0.034521120000, 1.779198200000),
    (0.339094100000, 0.036225710000, 1.775867100000),
    (0.336200000000, 0.038000000000, 1.772110000000),
    (0.333197700000, 0.039846670000, 1.768258900000),
    (0.330041100000, 0.041768000000, 1.764039000000),
    (0.326635700000, 0.043766000000, 1.758943800000),
    (0.322886800000, 0.045842670000, 1.752466300000),
    (0.318700000000, 0.048000000000, 1.744100000000),
    (0.314025100000, 0.050243680000, 1.733559500000),
    (0.308884000000, 0.052573040000, 1.720858100000),
    (0.303290400000, 0.054980560000, 1.705936900000),
    (0.297257900000, 0.057458720000, 1.688737200000),
    (0.290800000000, 0.060000000000, 1.669200000000),
    (0.283970100000, 0.062601970000, 1.647528700000),
    (0.276721400000, 0.065277520000, 1.623412700000),
    (0.268917800000, 0.068042080000, 1.596022300000),
    (0.260422700000, 0.070911090000, 1.564528000000),
    (0.251100000000, 0.073900000000, 1.528100000000),
    (0.240847500000, 0.077016000000, 1.486111400000),
    (0.229851200000, 0.080266400000, 1.439521500000),
    (0.218407200000, 0.083666800000, 1.389879900000),
    (0.206811500000, 0.087232800000, 1.338736200000),
    (0.195360000000, 0.090980000000, 1.287640000000),
    (0.184213600000, 0.094917550000, 1.237422300000),
    (0.173327300000, 0.099045840000, 1.187824300000),
    (0.162688100000, 0.103367400000, 1.138761100000),
    (0.152283300000, 0.107884600000, 1.090148000000),
    (0.142100000000, 0.112600000000, 1.041900000000),
    (0.132178600000, 0.117532000000, 0.994197600000),
    (0.122569600000, 0.122674400000, 0.947347300000),
    (0.113275200000, 0.127992800000, 0.901453100000),
    (0.104297900000, 0.133452800000, 0.856619300000),
    (0.095640000000, 0.139020000000, 0.812950100000),
    (0.087299550000, 0.144676400000, 0.770517300000),
    (0.079308040000, 0.150469300000, 0.729444800000),
    (0.071717760000, 0.156461900000, 0.689913600000),
    (0.064580990000, 0.162717700000, 0.652104900000),
    (0.057950010000, 0.169300000000, 0.616200000000),
    (0.051862110000, 0.176243100000, 0.582328600000),
    (0.046281520000, 0.183558100000, 0.550416200000),
    (0.041150880000, 0.191273500000, 0.520337600000),
    (0.036412830000, 0.199418000000, 0.491967300000),
    (0.032010000000, 0.208020000000, 0.465180000000),
    (0.027917200000, 0.217119900000, 0.439924600000),
    (0.024144400000, 0.226734500000, 0.416183600000),
    (0.020687000000, 0.236857100000, 0.393882200000),
    (0.017540400000, 0.247481200000, 0.372945900000),
    (0.014700000000, 0.258600000000, 0.353300000000),
    (0.012161790000, 0.270184900000, 0.334857800000),
    (0.009919960000, 0.282293900000, 0.317552100000),
    (0.007967240000, 0.295050500000, 0.301337500000),
    (0.006296346000, 0.308578000000, 0.286168600000),
    (0.004900000000, 0.323000000000, 0.272000000000),
    (0.003777173000, 0.338402100000, 0.258817100000),
    (0.002945320000, 0.354685800000, 0.246483800000),
    (0.002424880000, 0.371698600000, 0.234771800000),
    (0.002236293000, 0.389287500000, 0.223453300000),
    (0.002400000000, 0.407300000000, 0.212300000000),
    (0.002925520000, 0.425629900000, 0.201169200000),
    (0.003836560000, 0.444309600000, 0.190119600000),
    (0.005174840000, 0.463394400000, 0.179225400000),
    (0.006982080000, 0.482939500000, 0.168560800000),
    (0.009300000000, 0.503000000000, 0.158200000000),
    (0.012149490000, 0.523569300000, 0.148138300000),
    (0.015535880000, 0.544512000000, 0.138375800000),
    (0.019477520000, 0.565690000000, 0.128994200000),
    (0.023992770000, 0.586965300000, 0.120075100000),
    (0.029100000000, 0.608200000000, 0.111700000000),
    (0.034814850000, 0.629345600000, 0.103904800000),
    (0.041120160000, 0.650306800000, 0.096667480000),
    (0.047985040000, 0.670875200000, 0.089982720000),
    (0.055378610000, 0.690842400000, 0.083845310000),
    (0.063270000000, 0.710000000000, 0.078249990000),
    (0.071635010000, 0.728185200000, 0.073208990000),
    (0.080462240000, 0.745463600000, 0.068678160000),
    (0.089739960000, 0.761969400000, 0.064567840000),
    (0.099456450000, 0.777836800000, 0.060788350000),
    (0.109600000000, 0.793200000000, 0.057250010000),
    (0.120167400000, 0.808110400000, 0.053904350000),
    (0.131114500000, 0.822496200000, 0.050746640000),
    (0.142367900000, 0.836306800000, 0.047752760000),
    (0.153854200000, 0.849491600000, 0.044898590000),
    (0.165500000000, 0.862000000000, 0.042160000000),
    (0.177257100000, 0.873810800000, 0.039507280000),
    (0.189140000000, 0.884962400000, 0.036935640000),
    (0.201169400000, 0.895493600000, 0.034458360000),
    (0.213365800000, 0.905443200000, 0.032088720000),
    (0.225749900000, 0.914850100000, 0.029840000000),
    (0.238320900000, 0.923734800000, 0.027711810000),
    (0.251066800000, 0.932092400000, 0.025694440000),
    (0.263992200000, 0.939922600000, 0.023787160000),
    (0.277101700000, 0.947225200000, 0.021989250000),
    (0.290400000000, 0.954000000000, 0.020300000000),
    (0.303891200000, 0.960256100000, 0.018718050000),
    (0.317572600000, 0.966007400000, 0.017240360000),
    (0.331438400000, 0.971260600000, 0.015863640000),
    (0.345482800000, 0.976022500000, 0.014584610000),
    (0.359700000000, 0.980300000000, 0.013400000000),
    (0.374083900000, 0.984092400000, 0.012307230000),
    (0.388639600000, 0.987418200000, 0.011301880000),
    (0.403378400000, 0.990312800000, 0.010377920000),
    (0.418311500000, 0.992811600000, 0.009529306000),
    (0.433449900000, 0.994950100000, 0.008749999000),
    (0.448795300000, 0.996710800000, 0.008035200000),
    (0.464336000000, 0.998098300000, 0.007381600000),
    (0.480064000000, 0.999112000000, 0.006785400000),
    (0.495971300000, 0.999748200000, 0.006242800000),
    (0.512050100000, 1.000000000000, 0.005749999000),
    (0.528295900000, 0.999856700000, 0.005303600000),
    (0.544691600000, 0.999304600000, 0.004899800000),
    (0.561209400000, 0.998325500000, 0.004534200000),
    (0.577821500000, 0.996898700000, 0.004202400000),
    (0.594500000000, 0.995000000000, 0.003900000000),
    (0.611220900000, 0.992600500000, 0.003623200000),
    (0.627975800000, 0.989742600000, 0.003370600000),
    (0.644760200000, 0.986444400000, 0.003141400000),
    (0.661569700000, 0.982724100000, 0.002934800000),
    (0.678400000000, 0.978600000000, 0.002749999000),
    (0.695239200000, 0.974083700000, 0.002585200000),
    (0.712058600000, 0.969171200000, 0.002438600000),
    (0.728828400000, 0.963856800000, 0.002309400000),
    (0.745518800000, 0.958134900000, 0.002196800000),
    (0.762100000000, 0.952000000000, 0.002100000000),
    (0.778543200000, 0.945450400000, 0.002017733000),
    (0.794825600000, 0.938499200000, 0.001948200000),
    (0.810926400000, 0.931162800000, 0.001889800000),
    (0.826824800000, 0.923457600000, 0.001840933000),
    (0.842500000000, 0.915400000000, 0.001800000000),
    (0.857932500000, 0.907006400000, 0.001766267000),
    (0.873081600000, 0.898277200000, 0.001737800000),
    (0.887894400000, 0.889204800000, 0.001711200000),
    (0.902318100000, 0.879781600000, 0.001683067000),
    (0.916300000000, 0.870000000000, 0.001650001000),
    (0.929799500000, 0.859861300000, 0.001610133000),
    (0.942798400000, 0.849392000000, 0.001564400000),
    (0.955277600000, 0.838622000000, 0.001513600000),
    (0.967217900000, 0.827581300000, 0.001458533000),
    (0.978600000000, 0.816300000000, 0.001400000000),
    (0.989385600000, 0.804794700000, 0.001336667000),
    (0.999548800000, 0.793082000000, 0.001270000000),
    (1.009089200000, 0.781192000000, 0.001205000000),
    (1.018006400000, 0.769154700000, 0.001146667000),
    (1.026300000000, 0.757000000000, 0.001100000000),
    (1.033982700000, 0.744754100000, 0.001068800000),
    (1.040986000000, 0.732422400000, 0.001049400000),
    (1.047188000000, 0.720003600000, 0.001035600000),
    (1.052466700000, 0.707496500000, 0.001021200000),
    (1.056700000000, 0.694900000000, 0.001000000000),
    (1.059794400000, 0.682219200000, 0.000968640000),
    (1.061799200000, 0.669471600000, 0.000929920000),
    (1.062806800000, 0.656674400000, 0.000886880000),
    (1.062909600000, 0.643844800000, 0.000842560000),
    (1.062200000000, 0.631000000000, 0.000800000000),
    (1.060735200000, 0.618155500000, 0.000760960000),
    (1.058443600000, 0.605314400000, 0.000723680000),
    (1.055224400000, 0.592475600000, 0.000685920000),
    (1.050976800000, 0.579637900000, 0.000645440000),
    (1.045600000000, 0.566800000000, 0.000600000000),
    (1.039036900000, 0.553961100000, 0.000547866700),
    (1.031360800000, 0.541137200000, 0.000491600000),
    (1.022666200000, 0.528352800000, 0.000435400000),
    (1.013047700000, 0.515632300000, 0.000383466700),
    (1.002600000000, 0.503000000000, 0.000340000000),
    (0.991367500000, 0.490468800000, 0.000307253300),
    (0.979331400000, 0.478030400000, 0.000283160000),
    (0.966491600000, 0.465677600000, 0.000265440000),
    (0.952847900000, 0.453403200000, 0.000251813300),
    (0.938400000000, 0.441200000000, 0.000240000000),
    (0.923194000000, 0.429080000000, 0.000229546700),
    (0.907244000000, 0.417036000000, 0.000220640000),
    (0.890502000000, 0.405032000000, 0.000211960000),
    (0.872920000000, 0.393032000000, 0.000202186700),
    (0.854449900000, 0.381000000000, 0.000190000000),
    (0.835084000000, 0.368918400000, 0.000174213300),
    (0.814946000000, 0.356827200000, 0.000155640000),
    (0.794186000000, 0.344776800000, 0.000135960000),
    (0.772954000000, 0.332817600000, 0.000116853300),
    (0.751400000000, 0.321000000000, 0.000100000000),
    (0.729583600000, 0.309338100000, 0.000086133330),
    (0.707588800000, 0.297850400000, 0.000074600000),
    (0.685602200000, 0.286593600000, 0.000065000000),
    (0.663810400000, 0.275624500000, 0.000056933330),
    (0.642400000000, 0.265000000000, 0.000049999990),
    (0.621514900000, 0.254763200000, 0.000044160000),
    (0.601113800000, 0.244889600000, 0.000039480000),
    (0.581105200000, 0.235334400000, 0.000035720000),
    (0.561397700000, 0.226052800000, 0.000032640000),
    (0.541900000000, 0.217000000000, 0.000030000000),
    (0.522599500000, 0.208161600000, 0.000027653330),
    (0.503546400000, 0.199548800000, 0.000025560000),
    (0.484743600000, 0.191155200000, 0.000023640000),
    (0.466193900000, 0.182974400000, 0.000021813330),
    (0.447900000000, 0.175000000000, 0.000020000000),
    (0.429861300000, 0.167223500000, 0.000018133330),
    (0.412098000000, 0.159646400000, 0.000016200000),
    (0.394644000000, 0.152277600000, 0.000014200000),
    (0.377533300000, 0.145125900000, 0.000012133330),
    (0.360800000000, 0.138200000000, 0.000010000000),
    (0.344456300000, 0.131500300000, 0.000007733333),
    (0.328516800000, 0.125024800000, 0.000005400000),
    (0.313019200000, 0.118779200000, 0.000003200000),
    (0.298001100000, 0.112769100000, 0.000001333333),
    (0.283500000000, 0.107000000000, 0.000000000000),
    (0.269544800000, 0.101476200000, 0.000000000000),
    (0.256118400000, 0.096188640000, 0.000000000000),
    (0.243189600000, 0.091122960000, 0.000000000000),
    (0.230727200000, 0.086264850000, 0.000000000000),
    (0.218700000000, 0.081600000000, 0.000000000000),
    (0.207097100000, 0.077120640000, 0.000000000000),
    (0.195923200000, 0.072825520000, 0.000000000000),
    (0.185170800000, 0.068710080000, 0.000000000000),
    (0.174832300000, 0.064769760000, 0.000000000000),
    (0.164900000000, 0.061000000000, 0.000000000000),
    (0.155366700000, 0.057396210000, 0.000000000000),
    (0.146230000000, 0.053955040000, 0.000000000000),
    (0.137490000000, 0.050673760000, 0.000000000000),
    (0.129146700000, 0.047549650000, 0.000000000000),
    (0.121200000000, 0.044580000000, 0.000000000000),
    (0.113639700000, 0.041758720000, 0.000000000000),
    (0.106465000000, 0.039084960000, 0.000000000000),
    (0.099690440000, 0.036563840000, 0.000000000000),
    (0.093330610000, 0.034200480000, 0.000000000000),
    (0.087400000000, 0.032000000000, 0.000000000000),
    (0.081900960000, 0.029962610000, 0.000000000000),
    (0.076804280000, 0.028076640000, 0.000000000000),
    (0.072077120000, 0.026329360000, 0.000000000000),
    (0.067686640000, 0.024708050000, 0.000000000000),
    (0.063600000000, 0.023200000000, 0.000000000000),
    (0.059806850000, 0.021800770000, 0.000000000000),
    (0.056282160000, 0.020501120000, 0.000000000000),
    (0.052971040000, 0.019281080000, 0.000000000000),
    (0.049818610000, 0.018120690000, 0.000000000000),
    (0.046770000000, 0.017000000000, 0.000000000000),
    (0.043784050000, 0.015903790000, 0.000000000000),
    (0.040875360000, 0.014837180000, 0.000000000000),
    (0.038072640000, 0.013810680000, 0.000000000000),
    (0.035404610000, 0.012834780000, 0.000000000000),
    (0.032900000000, 0.011920000000, 0.000000000000),
    (0.030564190000, 0.011068310000, 0.000000000000),
    (0.028380560000, 0.010273390000, 0.000000000000),
    (0.026344840000, 0.009533311000, 0.000000000000),
    (0.024452750000, 0.008846157000, 0.000000000000),
    (0.022700000000, 0.008210000000, 0.000000000000),
    (0.021084290000, 0.007623781000, 0.000000000000),
    (0.019599880000, 0.007085424000, 0.000000000000),
    (0.018237320000, 0.006591476000, 0.000000000000),
    (0.016987170000, 0.006138485000, 0.000000000000),
    (0.015840000000, 0.005723000000, 0.000000000000),
    (0.014790640000, 0.005343059000, 0.000000000000),
    (0.013831320000, 0.004995796000, 0.000000000000),
    (0.012948680000, 0.004676404000, 0.000000000000),
    (0.012129200000, 0.004380075000, 0.000000000000),
    (0.011359160000, 0.004102000000, 0.000000000000),
    (0.010629350000, 0.003838453000, 0.000000000000),
    (0.009938846000, 0.003589099000, 0.000000000000),
    (0.009288422000, 0.003354219000, 0.000000000000),
    (0.008678854000, 0.003134093000, 0.000000000000),
    (0.008110916000, 0.002929000000, 0.000000000000),
    (0.007582388000, 0.002738139000, 0.000000000000),
    (0.007088746000, 0.002559876000, 0.000000000000),
    (0.006627313000, 0.002393244000, 0.000000000000),
    (0.006195408000, 0.002237275000, 0.000000000000),
    (0.005790346000, 0.002091000000, 0.000000000000),
    (0.005409826000, 0.001953587000, 0.000000000000),
    (0.005052583000, 0.001824580000, 0.000000000000),
    (0.004717512000, 0.001703580000, 0.000000000000),
    (0.004403507000, 0.001590187000, 0.000000000000),
    (0.004109457000, 0.001484000000, 0.000000000000),
    (0.003833913000, 0.001384496000, 0.000000000000),
    (0.003575748000, 0.001291268000, 0.000000000000),
    (0.003334342000, 0.001204092000, 0.000000000000),
    (0.003109075000, 0.001122744000, 0.000000000000),
    (0.002899327000, 0.001047000000, 0.000000000000),
    (0.002704348000, 0.000976589600, 0.000000000000),
    (0.002523020000, 0.000911108800, 0.000000000000),
    (0.002354168000, 0.000850133200, 0.000000000000),
    (0.002196616000, 0.000793238400, 0.000000000000),
    (0.002049190000, 0.000740000000, 0.000000000000),
    (0.001910960000, 0.000690082700, 0.000000000000),
    (0.001781438000, 0.000643310000, 0.000000000000),
    (0.001660110000, 0.000599496000, 0.000000000000),
    (0.001546459000, 0.000558454700, 0.000000000000),
    (0.001439971000, 0.000520000000, 0.000000000000),
    (0.001340042000, 0.000483913600, 0.000000000000),
    (0.001246275000, 0.000450052800, 0.000000000000),
    (0.001158471000, 0.000418345200, 0.000000000000),
    (0.001076430000, 0.000388718400, 0.000000000000),
    (0.000999949300, 0.000361100000, 0.000000000000),
    (0.000928735800, 0.000335383500, 0.000000000000),
    (0.000862433200, 0.000311440400, 0.000000000000),
    (0.000800750300, 0.000289165600, 0.000000000000),
    (0.000743396000, 0.000268453900, 0.000000000000),
    (0.000690078600, 0.000249200000, 0.000000000000),
    (0.000640515600, 0.000231301900, 0.000000000000),
    (0.000594502100, 0.000214685600, 0.000000000000),
    (0.000551864600, 0.000199288400, 0.000000000000),
    (0.000512429000, 0.000185047500, 0.000000000000),
    (0.000476021300, 0.000171900000, 0.000000000000),
    (0.000442453600, 0.000159778100, 0.000000000000),
    (0.000411511700, 0.000148604400, 0.000000000000),
    (0.000382981400, 0.000138301600, 0.000000000000),
    (0.000356649100, 0.000128792500, 0.000000000000),
    (0.000332301100, 0.000120000000, 0.000000000000),
    (0.000309758600, 0.000111859500, 0.000000000000),
    (0.000288887100, 0.000104322400, 0.000000000000),
    (0.000269539400, 0.000097335600, 0.000000000000),
    (0.000251568200, 0.000090845870, 0.000000000000),
    (0.000234826100, 0.000084800000, 0.000000000000),
    (0.000219171000, 0.000079146670, 0.000000000000),
    (0.000204525800, 0.000073858000, 0.000000000000),
    (0.000190840500, 0.000068916000, 0.000000000000),
    (0.000178065400, 0.000064302670, 0.000000000000),
    (0.000166150500, 0.000060000000, 0.000000000000),
    (0.000155023600, 0.000055981870, 0.000000000000),
    (0.000144621900, 0.000052225600, 0.000000000000),
    (0.000134909800, 0.000048718400, 0.000000000000),
    (0.000125852000, 0.000045447470, 0.000000000000),
    (0.000117413000, 0.000042400000, 0.000000000000),
    (0.000109551500, 0.000039561040, 0.000000000000),
    (0.000102224500, 0.000036915120, 0.000000000000),
    (0.000095394450, 0.000034448680, 0.000000000000),
    (0.000089023900, 0.000032148160, 0.000000000000),
    (0.000083075270, 0.000030000000, 0.000000000000),
    (0.000077512690, 0.000027991250, 0.000000000000),
    (0.000072313040, 0.000026113560, 0.000000000000),
    (0.000067457780, 0.000024360240, 0.000000000000),
    (0.000062928440, 0.000022724610, 0.000000000000),
    (0.000058706520, 0.000021200000, 0.000000000000),
    (0.000054770280, 0.000019778550, 0.000000000000),
    (0.000051099180, 0.000018452850, 0.000000000000),
    (0.000047676540, 0.000017216870, 0.000000000000),
    (0.000044485670, 0.000016064590, 0.000000000000),
    (0.000041509940, 0.000014990000, 0.000000000000),
    (0.000038733240, 0.000013987280, 0.000000000000),
    (0.000036142030, 0.000013051550, 0.000000000000),
    (0.000033723520, 0.000012178180, 0.000000000000),
    (0.000031464870, 0.000011362540, 0.000000000000),
    (0.000029353260, 0.000010600000, 0.000000000000),
    (0.000027375730, 0.000009885877, 0.000000000000),
    (0.000025524330, 0.000009217304, 0.000000000000),
    (0.000023793760, 0.000008592362, 0.000000000000),
    (0.000022178700, 0.000008009133, 0.000000000000),
    (0.000020673830, 0.000007465700, 0.000000000000),
    (0.000019272260, 0.000006959567, 0.000000000000),
    (0.000017966400, 0.000006487995, 0.000000000000),
    (0.000016749910, 0.000006048699, 0.000000000000),
    (0.000015616480, 0.000005639396, 0.000000000000),
    (0.000014559770, 0.000005257800, 0.000000000000),
    (0.000013573870, 0.000004901771, 0.000000000000),
    (0.000012654360, 0.000004569720, 0.000000000000),
    (0.000011797230, 0.000004260194, 0.000000000000),
    (0.000010998440, 0.000003971739, 0.000000000000),
    (0.000010253980, 0.000003702900, 0.000000000000),
    (0.000009559646, 0.000003452163, 0.000000000000),
    (0.000008912044, 0.000003218302, 0.000000000000),
    (0.000008308358, 0.000003000300, 0.000000000000),
    (0.000007745769, 0.000002797139, 0.000000000000),
    (0.000007221456, 0.000002607800, 0.000000000000),
    (0.000006732475, 0.000002431220, 0.000000000000),
    (0.000006276423, 0.000002266531, 0.000000000000),
    (0.000005851304, 0.000002113013, 0.000000000000),
    (0.000005455118, 0.000001969943, 0.000000000000),
    (0.000005085868, 0.000001836600, 0.000000000000),
    (0.000004741466, 0.000001712230, 0.000000000000),
    (0.000004420236, 0.000001596228, 0.000000000000),
    (0.000004120783, 0.000001488090, 0.000000000000),
    (0.000003841716, 0.000001387314, 0.000000000000),
    (0.000003581652, 0.000001293400, 0.000000000000),
    (0.000003339127, 0.000001205820, 0.000000000000),
    (0.000003112949, 0.000001124143, 0.000000000000),
    (0.000002902121, 0.000001048009, 0.000000000000),
    (0.000002705645, 0.000000977058, 0.000000000000),
    (0.000002522525, 0.000000910930, 0.000000000000),
    (0.000002351726, 0.000000849251, 0.000000000000),
    (0.000002192415, 0.000000791721, 0.000000000000),
    (0.000002043902, 0.000000738090, 0.000000000000),
    (0.000001905497, 0.000000688110, 0.000000000000),
    (0.000001776509, 0.000000641530, 0.000000000000),
    (0.000001656215, 0.000000598090, 0.000000000000),
    (0.000001544022, 0.000000557575, 0.000000000000),
    (0.000001439440, 0.000000519808, 0.000000000000),
    (0.000001341977, 0.000000484612, 0.000000000000),
    (0.000001251141, 0.000000451810, 0.000000000000)
);
const CIE_SAMPLE_NORM: f32 = 1.0 / 106.856834;

// from https://en.wikipedia.org/wiki/Illuminant_D65
const D65_WAVELENGTH_BASE: f32 = 300.0;
const D65_WAVELENGTH_STEP_SIZE: f32 = 10.0;
const D65_ILLUMINANT: &[f32] = &[
    0.034100, 3.294500, 20.236000, 37.053500, 39.948800, 44.911700, 46.638300, 52.089100, 49.975500, 54.648200,
    82.754900, 91.486000, 93.431800, 86.682300, 104.865000, 117.008000, 117.812000, 114.861000, 115.923000, 108.811000,
    109.354000, 107.802000, 104.790000, 107.689000, 104.405000, 104.046000, 100.000000, 96.334200, 95.788000,
    88.685600, 90.006200, 89.599100, 87.698700, 83.288600, 83.699200, 80.026800, 80.214600, 82.277800, 78.284200,
    69.721300, 71.609100, 74.349000, 61.604000, 69.885600, 75.087000, 63.592700, 46.418200, 66.805400, 63.382800,
];
const D65_SAMPLE_NORM: f32 = 0.01;

pub trait Sweep {
    type Item;

    fn next(&mut self, input: f32) -> Self::Item;

    fn product<U>(self, other: U) -> SweepProduct<Self::Item, Self, U>
    where
        Self: Sized,
        U: Sweep<Item = Self::Item>,
        Self::Item: Mul<Output = Self::Item>,
    {
        SweepProduct::new(self, other)
    }
}

impl<F, T> Sweep for F
where
    F: Fn(f32) -> T,
{
    type Item = T;
    fn next(&mut self, input: f32) -> Self::Item {
        self(input)
    }
}

pub struct SampleSweep<T, I>
where
    I: Iterator<Item = (f32, T)>,
    T: Copy + Add<Output = T> + Mul<f32, Output = T> + Default,
{
    iter: I,
    prev_sample: Option<(f32, T)>,
    next_sample: Option<(f32, T)>,
    prev_input: Option<f32>,
}

impl<T, I> SampleSweep<T, I>
where
    I: Iterator<Item = (f32, T)>,
    T: Copy + Add<Output = T> + Mul<f32, Output = T> + Default,
{
    fn new(iter: I) -> Self {
        Self {
            iter,
            prev_sample: None,
            next_sample: None,
            prev_input: None,
        }
    }
}

impl<T, I> Sweep for SampleSweep<T, I>
where
    I: Iterator<Item = (f32, T)>,
    T: Copy + Add<Output = T> + Mul<f32, Output = T> + Default,
{
    type Item = T;

    fn next(&mut self, input: f32) -> T {
        if let Some(prev_input) = self.prev_input {
            assert!(
                prev_input <= input,
                "sweep inputs must never decrease between calls to next()"
            );
        } else {
            self.prev_sample = self.iter.next();
            self.next_sample = self.iter.next();
        }
        self.prev_input = Some(input);
        while let (Some(prev_sample), Some(next_sample)) = (self.prev_sample, self.next_sample) {
            if input < prev_sample.0 {
                return T::default();
            }
            if input < next_sample.0 {
                let t = (input - prev_sample.0) / (next_sample.0 - prev_sample.0);
                return prev_sample.1 * (1.0 - t) + next_sample.1 * t;
            }
            self.prev_sample = self.next_sample;
            self.next_sample = self.iter.next();
        }
        return T::default();
    }
}

pub struct SweepProduct<T, A, B>
where
    A: Sweep<Item = T>,
    B: Sweep<Item = T>,
    T: Mul<Output = T>,
{
    a: A,
    b: B,
}

impl<T, A, B> SweepProduct<T, A, B>
where
    A: Sweep<Item = T>,
    B: Sweep<Item = T>,
    T: Mul<Output = T>,
{
    fn new(a: A, b: B) -> Self {
        Self { a, b }
    }
}

impl<T, A, B> Sweep for SweepProduct<T, A, B>
where
    A: Sweep<Item = T>,
    B: Sweep<Item = T>,
    T: Mul<Output = T>,
{
    type Item = T;
    fn next(&mut self, input: f32) -> T {
        self.a.next(input) * self.b.next(input)
    }
}

pub trait IntoSweep {
    type Item;
    type IntoType: Sweep<Item = Self::Item>;
    fn into_sweep(self) -> Self::IntoType;
}

impl<T, I> IntoSweep for I
where
    I: Iterator<Item = (f32, T)>,
    T: Copy + Add<Output = T> + Mul<f32, Output = T> + Default,
{
    type Item = T;
    type IntoType = SampleSweep<T, Self>;
    fn into_sweep(self) -> Self::IntoType {
        SampleSweep::new(self)
    }
}

fn d65_illuminant_sample_iter() -> impl Iterator<Item = (f32, f32)> {
    D65_ILLUMINANT.iter().enumerate().map(|(i, v)| {
        (
            D65_WAVELENGTH_BASE + D65_WAVELENGTH_STEP_SIZE * (i as f32),
            *v * D65_SAMPLE_NORM,
        )
    })
}

pub fn d65_illuminant_sweep() -> impl Sweep<Item = f32> {
    d65_illuminant_sample_iter().into_sweep()
}

fn xyz_matching_sample_iter() -> impl Iterator<Item = (f32, Vec3)> {
    CIE_SAMPLES.iter().enumerate().map(|(i, v)| {
        (
            CIE_WAVELENGTH_BASE + CIE_WAVELENGTH_STEP_SIZE * (i as f32),
            *v * CIE_SAMPLE_NORM,
        )
    })
}

pub fn xyz_matching_sweep() -> impl Sweep<Item = Vec3> {
    xyz_matching_sample_iter().into_sweep()
}

pub fn xyz_from_spectral_radiance_sweep(mut power: impl Sweep<Item = f32>) -> Vec3 {
    let mut sum = Vec3::zero();
    for (wavelength, value) in xyz_matching_sample_iter() {
        sum += value * power.next(wavelength);
    }
    sum * CIE_WAVELENGTH_STEP_SIZE
}

pub fn xyz_from_spectral_reflectance_sweep(
    mut reflectance: impl Sweep<Item = f32>,
    mut illuminant: impl Sweep<Item = f32>,
) -> Vec3 {
    let mut sum = Vec3::zero();
    let mut n = 0.0;
    for (wavelength, value) in xyz_matching_sample_iter() {
        let illum = illuminant.next(wavelength);
        sum += value * (illum * reflectance.next(wavelength));
        n += value.y * illum;
    }
    sum * (CIE_WAVELENGTH_STEP_SIZE / n)
}

pub struct SampledRefractiveIndex {
    pub wavelength: f32,
    pub eta: f32,
    pub k: f32,
}
macro_rules! refractive_index_samples {
    ($(($w:literal, $e:literal, $k:literal)),+) => { [ $(
        SampledRefractiveIndex { wavelength: $w * 1000.0, eta: $e, k: $k, },
    )+ ] }
}

// from https://refractiveindex.info (CC0 1.0 universal public domain)
pub const ALUMINIUM_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.35692, 0.35785, 4.1856),
    (0.37211, 0.3933, 4.3726),
    (0.38795, 0.43317, 4.5661),
    (0.40446, 0.4779, 4.7659),
    (0.42167, 0.52788, 4.9717),
    (0.43962, 0.58336, 5.183),
    (0.45833, 0.64439, 5.3994),
    (0.47783, 0.71074, 5.6203),
    (0.49817, 0.78186, 5.8455),
    (0.51937, 0.85697, 6.075),
    (0.54147, 0.93525, 6.3099),
    (0.56452, 1.0162, 6.5519),
    (0.58855, 1.1005, 6.8042),
    (0.61359, 1.1911, 7.0711),
    (0.63971, 1.2952, 7.3576),
    (0.66693, 1.4286, 7.6672),
    (0.69532, 1.6203, 7.9931),
    (0.72491, 1.9115, 8.2933),
    (0.75576, 2.3052, 8.4555),
    (0.78793, 2.6523, 8.3611),
    (0.82146, 2.7061, 8.1106),
    (0.85642, 2.4465, 7.9982)
);
pub const ALUMINIUM_ANTIMONIDE_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.3263, 3.81, 3.16),
    (0.3351, 3.91, 2.97),
    (0.3444, 3.96, 2.81),
    (0.3542, 3.95, 2.69),
    (0.3647, 3.97, 2.64),
    (0.3757, 4.14, 2.69),
    (0.3875, 4.51, 2.47),
    (0.3999, 4.57, 2.12),
    (0.4133, 4.52, 1.97),
    (0.4275, 4.66, 2.06),
    (0.4428, 5.27, 1.58),
    (0.4592, 5.08, 0.92),
    (0.4769, 4.81, 0.63),
    (0.4959, 4.61, 0.46),
    (0.5166, 4.44, 0.33),
    (0.5391, 4.31, 0.24),
    (0.5636, 4.2, 0.01),
    (0.5904, 4.01, 0.006),
    (0.6199, 3.9, 0.004),
    (0.6525, 3.81, 0.003),
    (0.6888, 3.73, 0.002),
    (0.7293, 3.66, 0.001),
    (0.7749, 3.6, 0.0003),
    (0.8266, 3.54, 0.0002),
    (0.8856, 3.5, 0.0001)
);
pub const CHROMIUM_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.32, 1.65, 2.47),
    (0.332, 1.69, 2.53),
    (0.342, 1.76, 2.58),
    (0.354, 1.84, 2.64),
    (0.368, 1.87, 2.69),
    (0.381, 1.92, 2.74),
    (0.397, 2.0, 2.83),
    (0.413, 2.08, 2.93),
    (0.431, 2.19, 3.04),
    (0.451, 2.33, 3.14),
    (0.471, 2.51, 3.24),
    (0.496, 2.75, 3.3),
    (0.521, 2.94, 3.33),
    (0.549, 3.18, 3.33),
    (0.582, 3.22, 3.3),
    (0.617, 3.17, 3.3),
    (0.659, 3.09, 3.34),
    (0.704, 3.05, 3.39),
    (0.756, 3.08, 3.42),
    (0.821, 3.2, 3.48),
    (0.892, 3.3, 3.52)
);
pub const COPPER_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.37527,	1.2161,	2.1422),
    (0.38307,	1.2373,	2.1891),
    (0.39103,	1.2613,	2.2277),
    (0.39916,	1.2856,	2.2575),
    (0.40746,	1.3077,	2.2785),
    (0.41593,	1.3253,	2.2916),
    (0.42458,	1.3363,	2.2977),
    (0.4334,	1.3389,	2.2984),
    (0.44241,	1.3316,	2.2956),
    (0.45161,	1.3132,	2.2913),
    (0.461,	1.2832,	2.288),
    (0.47058,	1.2413,	2.288),
    (0.48036,	1.1879,	2.2941),
    (0.49035,	1.124,	2.3088),
    (0.50054,	1.0512,	2.3343),
    (0.51094,	0.97185,	2.3725),
    (0.52157,	0.88859,	2.4247),
    (0.53241,	0.80438,	2.4911),
    (0.54348,	0.72204,	2.5713),
    (0.55477,	0.64392,	2.6639),
    (0.56631,	0.57177,	2.7672),
    (0.57808,	0.50663,	2.8793),
    (0.5901,	0.44894,	2.9983),
    (0.60236,	0.39868,	3.1227),
    (0.61488,	0.35554,	3.2509),
    (0.62767,	0.31902,	3.3821),
    (0.64071,	0.28853,	3.5153),
    (0.65403,	0.26347,	3.65),
    (0.66763,	0.24324,	3.7857),
    (0.68151,	0.22732,	3.9221),
    (0.69567,	0.2152,	4.0592),
    (0.71014,	0.20645,	4.1967),
    (0.7249,	0.20067,	4.3347),
    (0.73997,	0.19753,	4.4732)
);
pub const IRON_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.354, 1.93, 2.35),
    (0.368, 2.02, 2.43),
    (0.381, 2.12, 2.5),
    (0.397, 2.24, 2.58),
    (0.413, 2.35, 2.65),
    (0.431, 2.48, 2.71),
    (0.451, 2.59, 2.77),
    (0.471, 2.67, 2.82),
    (0.496, 2.74, 2.88),
    (0.521, 2.86, 2.91),
    (0.549, 2.95, 2.93),
    (0.582, 2.94, 2.99),
    (0.617, 2.88, 3.05),
    (0.659, 2.92, 3.1),
    (0.704, 2.86, 3.19),
    (0.756, 2.87, 3.28),
    (0.821, 2.94, 3.39),
    (0.892, 2.96, 3.56)
);
pub const GOLD_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.35972, 1.6006, 1.7597),
    (0.36559, 1.581, 1.7714),
    (0.37155, 1.5645, 1.7856),
    (0.37761, 1.5515, 1.8007),
    (0.38377, 1.5419, 1.8152),
    (0.39002, 1.5351, 1.8276),
    (0.39638, 1.5301, 1.8366),
    (0.40285, 1.5255, 1.8413),
    (0.40942, 1.5196, 1.8411),
    (0.41609, 1.5107, 1.8362),
    (0.42288, 1.4971, 1.8268),
    (0.42977, 1.4771, 1.814),
    (0.43678, 1.4493, 1.7988),
    (0.4439, 1.4126, 1.7829),
    (0.45114, 1.3661, 1.7681),
    (0.4585, 1.3095, 1.7567),
    (0.46598, 1.2427, 1.7509),
    (0.47358, 1.1664, 1.7532),
    (0.4813, 1.0821, 1.7661),
    (0.48915, 0.99182, 1.7916),
    (0.49712, 0.89849, 1.8312),
    (0.50523, 0.80543, 1.8852),
    (0.51347, 0.7159, 1.953),
    (0.52184, 0.6326, 2.0328),
    (0.53035, 0.55731, 2.1222),
    (0.539, 0.49085, 2.2188),
    (0.54779, 0.43326, 2.3201),
    (0.55672, 0.38405, 2.4245),
    (0.5658, 0.34242, 2.5305),
    (0.57503, 0.30751, 2.637),
    (0.5844, 0.27843, 2.7434),
    (0.59393, 0.25437, 2.8493),
    (0.60362, 0.23457, 2.9545),
    (0.61346, 0.21841, 3.0587),
    (0.62346, 0.20533, 3.1621),
    (0.63363, 0.19487, 3.2645),
    (0.64396, 0.18664, 3.3662),
    (0.65446, 0.1803, 3.4671),
    (0.66514, 0.17558, 3.5675),
    (0.67598, 0.17227, 3.6674),
    (0.68701, 0.17016, 3.7669),
    (0.69821, 0.16911, 3.8661),
    (0.70959, 0.16897, 3.9653),
    (0.72117, 0.16966, 4.0644),
    (0.73292, 0.17107, 4.1635),
    (0.74488, 0.17313, 4.2629),
    (0.75702, 0.17577, 4.3625),
    (0.76937, 0.17895, 4.4624),
    (0.78191, 0.18262, 4.5627),
    (0.79466, 0.18675, 4.6635),
    (0.80762, 0.19129, 4.7649),
    (0.82079, 0.19621, 4.8669),
    (0.83418, 0.20151, 4.9695)
);
pub const SILVER_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.35324, 0.20172, 1.286),
    (0.36025, 0.18151, 1.4005),
    (0.36741, 0.16741, 1.5059),
    (0.3747, 0.15739, 1.6045),
    (0.38214, 0.15021, 1.6979),
    (0.38973, 0.14506, 1.7873),
    (0.39746, 0.14141, 1.8736),
    (0.40535, 0.13887, 1.9574),
    (0.4134, 0.13716, 2.0394),
    (0.42161, 0.13609, 2.12),
    (0.42998, 0.1355, 2.1995),
    (0.43852, 0.13529, 2.2782),
    (0.44722, 0.13537, 2.3564),
    (0.4561, 0.13569, 2.4344),
    (0.46515, 0.13621, 2.5122),
    (0.47439, 0.13687, 2.5901),
    (0.48381, 0.13767, 2.6682),
    (0.49341, 0.13857, 2.7466),
    (0.50321, 0.13958, 2.8254),
    (0.5132, 0.14067, 2.9048),
    (0.52339, 0.14184, 2.9848),
    (0.53378, 0.14308, 3.0656),
    (0.54437, 0.1444, 3.1471),
    (0.55518, 0.14578, 3.2295),
    (0.5662, 0.14723, 3.3128),
    (0.57744, 0.14875, 3.3971),
    (0.58891, 0.15034, 3.4825),
    (0.6006, 0.152, 3.569),
    (0.61252, 0.15373, 3.6567),
    (0.62468, 0.15554, 3.7455),
    (0.63709, 0.15742, 3.8357),
    (0.64973, 0.15939, 3.9272),
    (0.66263, 0.16143, 4.02),
    (0.67579, 0.16356, 4.1143),
    (0.6892, 0.16579, 4.21),
    (0.70289, 0.1681, 4.3072),
    (0.71684, 0.17051, 4.4061),
    (0.73107, 0.17303, 4.5065),
    (0.74559, 0.17565, 4.6085),
    (0.76039, 0.17838, 4.7123),
    (0.77549, 0.18123, 4.8178),
    (0.79088, 0.1842, 4.9251),
    (0.80658, 0.18729, 5.0343),
    (0.8226, 0.19051, 5.1453),
    (0.83893, 0.19387, 5.2583)
);
pub const TITANIUM_NITRIDE_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.31,	2.27,	1.23),
    (0.3542,	2.14,	1.06),
    (0.4133,	1.74,	1.04),
    (0.4959,	1.2,	1.65),
    (0.6199,	1.32,	2.69),
    (0.8266,	1.82,	3.81),
    (1.2399,	2.69,	5.04)
);
pub const TUNGSTEN_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.30996, 1.8008, 4.3314),
    (0.330625, 2.0193, 3.578),
    (0.354241, 1.327, 3.806),
    (0.38149, 1.2611, 4.516),
    (0.413281, 1.6556, 5.1025),
    (0.450852, 2.2457, 5.1471),
    (0.495937, 2.0777, 4.782),
    (0.551041, 1.3296, 5.2379),
    (0.619921, 0.933, 6.3712),
    (0.708481, 0.8969, 7.8089),
    (0.826561, 1.1957, 9.6069),
    (0.991874, 2.1933, 11.8617)
);
pub const VANADIUM_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.311, 2.17, 3.06),
    (0.32, 2.28, 3.15),
    (0.332, 2.37, 3.22),
    (0.342, 2.42, 3.29),
    (0.354, 2.51, 3.34),
    (0.368, 2.68, 3.4),
    (0.381, 2.87, 3.45),
    (0.397, 3.07, 3.48),
    (0.413, 3.31, 3.49),
    (0.431, 3.52, 3.49),
    (0.451, 3.59, 3.46),
    (0.471, 3.81, 3.38),
    (0.496, 3.92, 3.26),
    (0.521, 3.86, 3.18),
    (0.549, 4.0, 3.04),
    (0.582, 3.83, 3.0),
    (0.617, 3.54, 3.02),
    (0.659, 3.25, 3.09),
    (0.704, 3.18, 3.15),
    (0.756, 3.2, 3.2),
    (0.821, 3.16, 3.25),
    (0.892, 3.12, 3.34)
);
pub const VANADIUM_NITRIDE_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.2755, 2.19, 1.56),
    (0.31, 2.2, 1.54),
    (0.3542, 2.18, 1.58),
    (0.4133, 2.13, 1.7),
    (0.4959, 2.17, 1.98),
    (0.6199, 2.35, 2.47),
    (0.8266, 2.73, 2.92),
    (1.2399, 3.19, 3.66)
);
pub const LITHIUM_SAMPLES: &[SampledRefractiveIndex] = &refractive_index_samples!(
    (0.32627, 0.34301, 1.38479),
    (0.33062, 0.3382, 1.41929),
    (0.33509, 0.33429, 1.43588),
    (0.33968, 0.33051, 1.45232),
    (0.3444, 0.32328, 1.48476),
    (0.34925, 0.31984, 1.50077),
    (0.35424, 0.31649, 1.51663),
    (0.35937, 0.31009, 1.54795),
    (0.36466, 0.30404, 1.57875),
    (0.3701, 0.29531, 1.60848),
    (0.37571, 0.28993, 1.63831),
    (0.38149, 0.28191, 1.66718),
    (0.38745, 0.27423, 1.69564),
    (0.3936, 0.2697, 1.72416),
    (0.39995, 0.26258, 1.75184),
    (0.40651, 0.25378, 1.79288),
    (0.41328, 0.24549, 1.8331),
    (0.42029, 0.23668, 1.85904),
    (0.42753, 0.22763, 1.91097),
    (0.43503, 0.22207, 1.93631),
    (0.4428, 0.21396, 1.9864),
    (0.45085, 0.20635, 2.03533),
    (0.4592, 0.19683, 2.08297),
    (0.46786, 0.19016, 2.12983),
    (0.47686, 0.18385, 2.17573),
    (0.48621, 0.17389, 2.24282),
    (0.49594, 0.16838, 2.28656),
    (0.50606, 0.16165, 2.35077),
    (0.5166, 0.15539, 2.41333),
    (0.52759, 0.14953, 2.47434),
    (0.53906, 0.14601, 2.53403),
    (0.55104, 0.14359, 2.61163),
    (0.56356, 0.14428, 2.66849),
    (0.57667, 0.14585, 2.74249),
    (0.5904, 0.14653, 2.83222),
    (0.6048, 0.14817, 2.90206),
    (0.61992, 0.14898, 2.987),
    (0.63582, 0.15069, 3.08589),
    (0.65255, 0.15243, 3.1817),
    (0.67018, 0.15574, 3.27479),
    (0.6888, 0.15828, 3.3801),
    (0.70848, 0.16159, 3.49659),
    (0.72932, 0.16422, 3.62312),
    (0.75142, 0.16954, 3.7455),
    (0.7749, 0.17282, 3.87684),
    (0.7999, 0.17926, 4.01648),
    (0.82656, 0.18374, 4.16338),
    (0.85506, 0.18995, 4.31695),
    (0.8856, 0.19721, 4.48764),
    (0.9184, 0.20636, 4.65216)
);
